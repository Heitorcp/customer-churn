services:
  backend:
    build:
      context: .
      dockerfile: /src/backend/Dockerfile
    container_name: churn-prediction-backend
    ports:
      - "8081:8081"
    environment:
      - PYTHONPATH=/app
      - PORT=8081
    volumes:
      - ./models:/app/models:ro  # Mount models as read-only
    networks:
      - churn-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: /src/frontend/Dockerfile
    container_name: churn-prediction-frontend
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - STREAMLIT_SERVER_HEADLESS=true
    volumes:
      - ./outputs:/app/outputs:ro  # Mount outputs as read-only
      - ./config:/app/src/frontend/config  # Mount config for user management
    networks:
      - churn-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  churn-network:
    driver: bridge
    name: churn-prediction-network

volumes:
  models-data:
    driver: local
  outputs-data:
    driver: local